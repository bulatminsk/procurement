-- MySQL Script generated by MySQL Workbench

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema procurement
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `procurement` DEFAULT CHARACTER SET utf8 ;
USE `procurement` ;

-- -----------------------------------------------------
-- Table `procurement`.`Company`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `procurement`.`Company` (
  `id` INT(11) NOT NULL AUTO_INCREMENT COMMENT 'Id of the company',
  `web` VARCHAR(30) NULL DEFAULT NULL COMMENT 'Web site of the company',
  `name` VARCHAR(30) NULL DEFAULT NULL COMMENT 'Name of the company',
  `taxNumber` VARCHAR(30) NOT NULL COMMENT 'Tax number of the company',
  `isArchived` BIT(1) NOT NULL DEFAULT b'0' COMMENT 'Marker  (1- when company was deleted, 0-is default for active company)',
  `country` VARCHAR(100) NOT NULL COMMENT 'Country where company is registered',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 70
DEFAULT CHARACTER SET = utf8
COMMENT = 'Information about companies, represented in tenders and proposals by users';


-- -----------------------------------------------------
-- Table `procurement`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `procurement`.`User` (
  `login` VARCHAR(20) NOT NULL COMMENT 'User’s login',
  `email` VARCHAR(100) NULL DEFAULT NULL COMMENT 'User’s email',
  `firstName` VARCHAR(20) NULL DEFAULT NULL COMMENT 'User’s frist name',
  `lastName` VARCHAR(20) NULL DEFAULT NULL COMMENT 'User’s last name',
  `password` VARCHAR(255) NOT NULL COMMENT 'User’s password',
  `isArchived` BIT(1) NOT NULL DEFAULT b'0' COMMENT 'Marker  (1- when user was deleted, 0-is default for active user)',
  `isAdmin` BIT(1) NOT NULL DEFAULT b'0' COMMENT 'Marker  (1- when user is admin, 0-is default for client user)',
  `company_id` INT(11) NULL DEFAULT NULL COMMENT 'Id of the company, which represent user',
  PRIMARY KEY (`login`),
  INDEX `fk_u_company_idx` (`company_id` ASC),
  CONSTRAINT `fk_u_company_id`
    FOREIGN KEY (`company_id`)
    REFERENCES `procurement`.`Company` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Information about users of the procurement platform';


-- -----------------------------------------------------
-- Table `procurement`.`Tender`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `procurement`.`Tender` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(80) NULL DEFAULT NULL COMMENT 'Name for the tender, defined by the user',
  `category` VARCHAR(20) NULL DEFAULT NULL COMMENT 'Category for the tender, defined by the user (further could be systemised in enum)',
  `isArchived` BIT(1) NOT NULL DEFAULT b'0' COMMENT 'Marker  (1- when tender was deleted, 0-is default for active tender)',
  `price` INT(11) NULL DEFAULT NULL COMMENT 'Price for the tender, defined by the user',
  `winner` INT(11) NULL DEFAULT NULL COMMENT 'Winner of the tender defined by the tender owner, on the base of the evaluations, have done by the tender committee, which is also assigned by the tender owner',
  `deadline_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The last date, when proposals for the tender are accepted, defined by the user.\n',
  `published_at` TIMESTAMP NULL DEFAULT NULL COMMENT 'The date, when the user was defined evaluation criteria for the tender and published it.',
  `description` VARCHAR(500) NULL DEFAULT NULL COMMENT 'Information about the tender, which user enclosed to the tender',
  `user_login` VARCHAR(20) NOT NULL COMMENT 'Login of the user, owner of the tender',
  PRIMARY KEY (`id`),
  INDEX `fk_t_user_idx` (`user_login` ASC),
  CONSTRAINT `fk_t_user_login`
    FOREIGN KEY (`user_login`)
    REFERENCES `procurement`.`User` (`login`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 58
DEFAULT CHARACTER SET = utf8
COMMENT = 'A tender placed by user on the platform';


-- -----------------------------------------------------
-- Table `procurement`.`Evaluation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `procurement`.`Evaluation` (
  `id` INT(11) NOT NULL AUTO_INCREMENT COMMENT 'Id of the evaluation',
  `criteria` VARCHAR(80) NOT NULL COMMENT 'Name for the evaluation criteria',
  `weight` INT(11) NOT NULL DEFAULT '0' COMMENT 'Weight for the evaluation criteria',
  `isArchived` BIT(1) NOT NULL DEFAULT b'0' COMMENT 'Marker  (1- when evaluation was deleted, 0-is default for active evaluation)',
  `max_score` INT(11) NOT NULL DEFAULT '10' COMMENT 'Max score for the evaluation criteria (default is 10)',
  `tender_id` INT(11) NOT NULL COMMENT 'Id of the tender, for which criteria is defined',
  PRIMARY KEY (`id`),
  INDEX `fk_e_tender_idx` (`tender_id` ASC),
  CONSTRAINT `fk_e_tender_id`
    FOREIGN KEY (`tender_id`)
    REFERENCES `procurement`.`Tender` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 119
DEFAULT CHARACTER SET = utf8
COMMENT = 'Evaluation criteria developed by tender owner to evaluate placed tender';


-- -----------------------------------------------------
-- Table `procurement`.`Proposal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `procurement`.`Proposal` (
  `id` INT(11) NOT NULL AUTO_INCREMENT COMMENT 'Id of the proposal',
  `filePath` VARCHAR(500) NULL DEFAULT NULL COMMENT 'The path for the file, which is attached to the proposal application',
  `isArchived` BIT(1) NOT NULL DEFAULT b'0' COMMENT 'Marker  (1- when proposal was deleted, 0-is default for active proposal)',
  `applied_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The date, when the user applied for the tender and added proposal for the chosen tender',
  `application` VARCHAR(500) NULL DEFAULT NULL COMMENT 'Information, which user enclosed to the proposal',
  `tender_id` INT(11) NOT NULL COMMENT 'Id of the tender, for which proposal is applied',
  `user_login` VARCHAR(20) NOT NULL COMMENT 'Login of the user, owner of the proposal',
  PRIMARY KEY (`id`),
  INDEX `fk_p_tender_idx` (`tender_id` ASC),
  INDEX `fk_p_user_idx` (`user_login` ASC),
  CONSTRAINT `fk_p_tender_id`
    FOREIGN KEY (`tender_id`)
    REFERENCES `procurement`.`Tender` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_p_user_login`
    FOREIGN KEY (`user_login`)
    REFERENCES `procurement`.`User` (`login`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 120
DEFAULT CHARACTER SET = utf8
COMMENT = 'A proposal applied for the chosen tender';


-- -----------------------------------------------------
-- Table `procurement`.`proposal_user_evaluation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `procurement`.`proposal_user_evaluation` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `score` INT(11) NULL DEFAULT '0' COMMENT 'The score against evaluation criteria, set by the member of the tender committee, appointed by the tender owner',
  `user_login` VARCHAR(20) NOT NULL COMMENT 'The login of the member of the tender committee, appointed by the tender owner',
  `proposal_id` INT(11) NOT NULL COMMENT 'The proposal, which is evaluated',
  `evaluation_id` INT(11) NOT NULL COMMENT 'The id of the evaluation criteria for the scoring',
  PRIMARY KEY (`id`),
  INDEX `fk_pue_evaluation_idx` (`evaluation_id` ASC),
  INDEX `fk_pue_proposal_idx` (`proposal_id` ASC),
  INDEX `fk_pue_user_login_idx` (`user_login` ASC),
  CONSTRAINT `fk_pue_evaluation_id`
    FOREIGN KEY (`evaluation_id`)
    REFERENCES `procurement`.`Evaluation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pue_proposal_id`
    FOREIGN KEY (`proposal_id`)
    REFERENCES `procurement`.`Proposal` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pue_user_login`
    FOREIGN KEY (`user_login`)
    REFERENCES `procurement`.`User` (`login`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 2492
DEFAULT CHARACTER SET = utf8
COMMENT = 'An evaluation of proposal applied for the chosen tender by the certain criteria, made by the member of the tender committe';


-- -----------------------------------------------------
-- Table `procurement`.`user_tender`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `procurement`.`user_tender` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `user_login` VARCHAR(20) NOT NULL COMMENT 'The login of the member of the tender committee, appointed by the tender owner',
  `tender_id` INT(11) NOT NULL COMMENT 'The id of the tender for which the tender committee is appointed by the tender owner',
  PRIMARY KEY (`id`),
  INDEX `fk_ut_user_idx` (`user_login` ASC),
  INDEX `fk_ut_tender_idx` (`tender_id` ASC),
  CONSTRAINT `fk_ut_tender_id`
    FOREIGN KEY (`tender_id`)
    REFERENCES `procurement`.`Tender` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ut_user_login`
    FOREIGN KEY (`user_login`)
    REFERENCES `procurement`.`User` (`login`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 184
DEFAULT CHARACTER SET = utf8
COMMENT = 'A tender committee, defined by the tender owner, from the users represented the same company';

USE `procurement`;

DELIMITER $$
USE `procurement`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `procurement`.`Proposal_AFTER_INSERT`
AFTER INSERT ON `procurement`.`Proposal`
FOR EACH ROW
BEGIN
	IF (EXISTS (SELECT 1 FROM user_tender WHERE user_tender.tender_id=NEW.tender_id))
		THEN
			INSERT INTO proposal_user_evaluation (proposal_id, user_login, evaluation_id) 
				SELECT Proposal.id AS proposal_id, user_tender.user_login,  Evaluation.id AS evaluation_id FROM
					user_tender JOIN Proposal ON user_tender.tender_id=Proposal.tender_id
						LEFT JOIN Evaluation ON Proposal.tender_id=Evaluation.tender_id WHERE Proposal.id=NEW.id;
		END IF;
END$$

USE `procurement`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `procurement`.`user_tender_AFTER_DELETE`
AFTER DELETE ON `procurement`.`user_tender`
FOR EACH ROW
BEGIN
	IF (EXISTS (SELECT 1 FROM Proposal WHERE tender_id=OLD.tender_id ))
		THEN
			DELETE from proposal_user_evaluation  WHERE user_login=OLD.user_login;
	END IF;
END$$

USE `procurement`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `procurement`.`user_tender_AFTER_INSERT`
AFTER INSERT ON `procurement`.`user_tender`
FOR EACH ROW
BEGIN
	IF (EXISTS (SELECT 1 FROM Proposal WHERE tender_id=NEW.tender_id ))
		THEN
			INSERT INTO proposal_user_evaluation (proposal_id, user_login, evaluation_id) 
				SELECT Proposal.id AS proposal_id, user_tender.user_login,  Evaluation.id AS evaluation_id FROM
						user_tender JOIN Proposal ON user_tender.tender_id=Proposal.tender_id
								LEFT JOIN Evaluation ON Proposal.tender_id=Evaluation.tender_id WHERE user_tender.user_login=NEW.user_login;
	END IF;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
